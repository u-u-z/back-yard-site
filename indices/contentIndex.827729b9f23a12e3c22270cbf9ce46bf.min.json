{"/":{"title":"Remi IO","content":"\n## WHAT'S THIS\n- üåª Remi's data back yard, collections for everything usefully.\n- üìí Remi's new blog, record something I research.\n- üìñ Remi's knowledge base, share for everythings.\n\n## CATALOGS\n-  [[üë¨ FRIENDS]] - my cool guys. my second self.\n- [[üìí BLOGS]] - my blogs, articles about tech.\n---\n\u003e üè† If u r interested in how this site is built ,plz see [[üè† ABOUT THIS SITE]]\n\n","lastmodified":"2023-01-11T11:08:52.752845823Z","tags":null},"/-ABOUT-THIS-SITE":{"title":"üè† ABOUT THIS SITE","content":"\n## WHATS HAPPEND BEFORE ...\n\n\u003e ‚òÅÔ∏è cuz cloud provider upgrade, they migrate the business, we lost home...  \n\n---\n  \nLast time, I'm used the HEXO to build a blog. At that time, Im a \"full-stack developer\" ~~(not real)~~ node.js user. We love everthing on node.js runtime, npm, and other things. That's easy way to use the `yarn` get everything.\n\nLong time ago, some new tech comming, `deno` ","lastmodified":"2023-01-11T11:08:52.752845823Z","tags":null},"/-BLOGS":{"title":"","content":"[[üìñ How Linux Works]] - [Satoru Takeuchi(Ê≠¶ÂÜÖ Ë¶ö)](https://twitter.com/satoru_takeuchi)'s book.","lastmodified":"2023-01-11T11:08:52.696845484Z","tags":null},"/-FRIENDS":{"title":"Remi IO's friends.","content":"\n## SOME COOL GUYS\n\u003e  üìä In no particular order\n- **XYenon** https://blog.xyenon.bid\n- ","lastmodified":"2023-01-11T11:08:52.752845823Z","tags":null},"/-How-Linux-Works":{"title":"üìñ HOW LINUX WORKS","content":"\u003e‚úí By Satoru Takeuchi ([Github](https://github.com/satoru-takeuchi), [Twitter](https://twitter.com/satoru_takeuchi), [Intro](https://cybozu.co.jp/recruit/staff/sat.html))\n\n## CHAPTER 1: Overview of computer systems\n\nWhen computer running, the hardware device will repeat the following process:\n1. Request / Input by devices or networking.\n2. Read the program from RAM, execute on CPU, save results in RAM (part for save result).\n3. Save results to RAM or HDD/SSD storage, or send throw network devices, or output to device.\n4. repeat 1 ‚¨ÜÔ∏è\n\nThese meaningful steps for user, we call that **the program**. There r Applications, middlewares, and OS program for users.\n\nWhen program is running, we call that **the process**: the unit of program running on OS, one program not only have one processes.\n\nWhen program need call devices, we need driver. Avoid each program making a separate implementation for each device. the same devices types, they have the same interface design on OS driver.\n\n**KERNEL MODE** and **USER MODE**: for isolation, the processes cannot access the device directly, these mode exist implementation in the CPU. A program that runs in kernel mode and is not called by normal user processes is called a **kernel**.\n\n**SYSTEM CALL** : the process call the devices driver (or kernel features).\n\nKernel's main features:\n- Processes management (scheduler);\n- Memeory management;\n- File system features;\n- System call API;\n- Devices driver;\n\n## CHAPTER 2: USER MODE FEATURES\n","lastmodified":"2023-01-11T11:08:52.752845823Z","tags":null},"/2023-01-08":{"title":"","content":"","lastmodified":"2023-01-11T11:08:52.696845484Z","tags":null}}